Online podnikový reporting systém generický - Business Inteligence - Agile Business Intelligence
- Jednoduchý způsob připojení a konfigurace vstupních dat.
	- Využití .NET entity frameworku.
- Vytvoření reportů s možností doupravení.
- GUI 
	- Metabase
	- Jednoduché, hlavní dobré propojení s backendem
- Hledání chyb v datech 

Vývoj:
	1. prototyp
		Pro konkrétního zákazníka, ukázka reportovacích možností.
	
	2. Rešerše na požadavky
		Mezi více firmami, jaké by měly na systém požadavky a jaký mají formát dat.
	↓↓↓↓↓	
	3. zobecnění


Potenciální komplikace:
	Reportovací období - různá 
	Různé měny a zdroje kurzů atd.


Features
	Funkcionalita na převod a čištění dat.
	Definování vazeb mezi datovými entitami reporting systému a ERP systému
	Generování konfigurací pro metabase 


doménové jazyky možnost rozšíření
	- validita dat
	- různé technologie
	datové kostky atd. pro velké množství dat

 
 
 
 
 
Možné alternativy Metabase:
- Apache Superset 
	- uživatelsky složité úpravy reportů, nutná znalost SQL
	: 
		Richer data visualization features
		More chart types available inc. geospatial
		More granular security settings
		Access-restrictions for embedded dashboards
		Semantic layering

- Lightdash
	- no code option to create reports
	
- Redash - better sql editor
		 - more data sources
			- možnost udělat join nad dvěma zdroji dat.
			
- Knowage - zajímavé, nové, ale asi příliš málo rozšířené			
			
- Tubleau Public - vypadá zajímavě - TODO: prozkoumat

- Trevor, Tableau Server, Looker, Holistics - placené, uzavřené.

Porovnání user friendly:
In terms of user's ability to create and modify reports without coding, all four tools provide a user-friendly interface for creating and modifying reports. However, there are some differences in the level of customization and ease of use. Here's a breakdown of the differences between Lightdash, Metabase, Redash, and Apache Superset in this regard:

Lightdash: Lightdash provides a user-friendly interface for creating and modifying reports without coding. It offers a drag-and-drop interface for building queries and visualizations, which makes it easy for non-technical users to create reports. Additionally, Lightdash provides pre-built templates and examples to help users get started quickly.

Metabase: Metabase also provides a user-friendly interface for creating and modifying reports without coding. Its drag-and-drop interface allows users to create queries and visualizations without needing to write any code. However, Metabase's customization options are limited compared to some of the other tools on this list, which may make it less suitable for advanced users.

Redash: Redash provides a similar drag-and-drop interface for creating and modifying reports, but also allows users to create custom SQL queries using its query editor. This can be useful for advanced users who need more control over their queries and visualizations.

Apache Superset: Apache Superset offers a more advanced interface for creating and modifying reports, which may be less user-friendly for non-technical users. However, it also provides a wide range of customization options for reports and dashboards, which can be useful for advanced users who need more control over their visualizations.

Overall, Lightdash and Metabase are more focused on providing a user-friendly interface for creating and modifying reports without coding, while Redash and Apache Superset offer more advanced customization options for advanced users. Choosing the right tool depends on the specific needs and requirements of the organization or user.


Nejvíce user friendly jsou asi Metabase a Lightdash


Vítěz Metabase

Otázky:
	- .NET 7 vs 6
	
====Scaffolding	
	Scaffold-DbContext "server=mrzout.ad.merica.cz;Initial Catalog=HeliosMilos;User ID=heliosMilos;Password==********;;database=heliosMilos;Connect Timeout=30;Encrypt=False;Trust Server Certificate=False" Microsoft.EntityFrameworkCore.SqlServer -ContextDir data -OutputDir HeliosContext2 -Tables TabPrikazMzdyAZmetky,TabCisZam,TabKmenZbozi_EXT,TabKmenZbozi
	
	====Model se spotřebou materiálu
		Scaffold-DbContext "server=mrzout.ad.merica.cz;Initial Catalog=HeliosMilos;User ID=heliosMilos;Password=********;database=heliosMilos;Connect Timeout=30;Encrypt=False;Trust Server Certificate=False" Microsoft.EntityFrameworkCore.SqlServer -OutputDir HeliosContext -Tables TabPrikazMzdyAZmetky,TabCisZam,TabKmenZbozi_EXT,TabKmenZbozi,TabDokladyZbozi,TabPohybyZbozi,TabNC,TabCisOrg,TabCPraco

Connection string
Data Source=mrzout.ad.merica.cz;Initial Catalog=HeliosMilos;User ID=heliosMilos;Password=********;Connect Timeout=30;Encrypt=False;Trust Server Certificate=False;Application Intent=ReadWrite;Multi Subnet Failover=False

Podívat se na vytváření metabase z configuračního souboru.

"Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=HeliosBIData;Integrated Security=True;Connect Timeout=30;Encrypt=False;Trust Server Certificate=False;Application Intent=ReadWrite;Multi Subnet Failover=False"

Data Source=localhost;Integrated Security=True;Initial Catalog=HeliosBI;MultipleActiveResultSets=true;Connect Timeout=300;User ID=test;pwd=abc123;Enlist=false;Trust Server Certificate=False;Application Intent=ReadWrite;Multi Subnet Failover=False


docker run -d -p 3000:3000 \
  -e "MB_DB_TYPE=sqlserver" \
  -e "MB_DB_DBNAME=metabaseappdb" \
  -e "MB_DB_PORT=5432" \
  -e "MB_DB_USER=name" \
  -e "MB_DB_PASS=password" \
  -e "MB_DB_HOST=my-database-host" \
   --name metabase metabase/metabase

https://www.automacaodedados.com.br/en/stories/configurando-metabase-e-postgresql-no-docker/

https://stackoverflow.com/questions/17770902/forward-host-port-to-docker-container


https://stackoverflow.com/questions/18981279/the-tcp-ip-connection-to-the-host-localhost-port-1433-has-failed
TCP/IP was not allowed

This can be an intereting idea https://www.metabase.com/learn/data-modeling/models

Might be useful for syncing https://learn.microsoft.com/en-us/ef/core/logging-events-diagnostics/events


Spojování - data migration tool
: načtou se datové struktury a vytvoří grafická reprezentace, poté bude člověk schopný pospojovat určité datové položky dohromady a definovat typ
Program automaticky vytvoří nutné datové typy pro převod.

člověk si vybere typy 
https://www.integrate.io/
SSIS
https://blog.devart.com/how-to-compare-multiple-databases-from-the-command-line.html


Replication
ETL tool - extract, transform, load

Real-time (or streaming) ETL pipelines
APACHE KAFKA

kafka for C# nuget

Kafka Connect -> generic model -> Data check -> Reporting data abnormalities -> zobrazení pro Metabase

https://chat.openai.com/share/bcc51c26-cc9d-4335-8767-344df61c0851

Change Data Capture (CDC) Tools

Debezium Change Data Capture


https://paillave.github.io/Etl.Net/

Postup použít ETL na přenos dat a CDC na údržbu

potom automatický sutup metabase v kubernates

python library která převádí grafy z metabase do další metabase instance


V rámci vývoje dosavadního dema jsme identifikovali nejčastější operace, které jsou potřeba k importu dat do generického modelu. Těmito operacemi jsou join dat - tvorba vazeb a filtrování podle určitých kritérii pro tvorbu typů pracovníků, produktů a tak dále.


Připravit prezentaci
	Use case diagram
		- firma zákazník - Připojení databáze, definování vazeb -> import + kontinuální synchronizace
							Změna dat -> aktualizace finální databáze
							
	Architektura
		Moduly:
			ETL + CDC = data synchronizace
			Definovač vazeb = 
				- TODO: ilustrace grafického rozhraní
					- Zobrazí se seznam struktur, ke kterým je nutné definovat zdroj dat, postupně po jednotlivých typech a jejich atributem uživatel definuje zdroj.
					- Pro zdroj je možné vytvořit nějakou agregaci
					
					
https://www.youtube.com/watch?v=QYbXDp4Vu-8&list=PLePly4aug3iq98qw1GH8ogXSSJPE2uRr6  - apache kafka + dabezium connecter


Use an ETL tool or custom code to extract data from the source database, apply transformations, and publish the transformed data as messages to Kafka topics during the initial migration phase.

Integrate a CDC tool with Kafka, such as Debezium, to capture real-time changes from the source database. The CDC tool would publish these changes as events to Kafka topics.

Develop a consumer application or use an ETL tool to consume the messages/events from Kafka, apply any necessary transformations, and load the data into the final database.

https://www.youtube.com/watch?v=5E9aUXQCsGA - Ado.net

GUI design: https://www.figma.com/file/vXvTdjnP2RiJ3xpUwMxKIc/HeliosBI?type=design&node-id=0-1&mode=design&t=8Yli8qOojk4me2E0-0

bylo by tak potřeba - Data Transformation Graphical Editor - https://www.youtube.com/watch?v=R5nxTQjWdCA
														- https://www.youtube.com/watch?v=37m6QLyZymA - Talend má dokonce i CDC - je potřeba něco podobného, jen jednodušší
														
Ukázka CDC v KAFKA - https://www.youtube.com/watch?v=T6PAcWtoHTo

https://www.jointjs.com/demos/data-mapping

https://www.google.com/search?q=JavaScript+diagramming+library+data+mapping&sxsrf=AB5stBjW6Q57pEy1VP5nixS20mIMS7gBbA%3A1688893080954&ei=mHaqZKHmOb2M9u8PvYK5mAQ&ved=0ahUKEwihkp2BoYGAAxU9hv0HHT1BDkMQ4dUDCBA&uact=5&oq=JavaScript+diagramming+library+data+mapping&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCCEQoAE6CggAEEcQ1gQQsAM6BggAEBYQHjoICCEQFhAeEB06BwghEKABEAo6CgghEBYQHhAPEB06BQgAEKIESgQIQRgAULQIWMJvYLJwaApwAXgAgAHyA4gBkBKSAQg1LjEyLjQtMZgBAKABAcABAcgBCA&sclient=gws-wiz-serp

https://gojs.net/latest/index.html?gclid=Cj0KCQjwtamlBhD3ARIsAARoaEz29ix7CfHX-79btup5P-MzqOOQx_rRmvqkSNsynIBLKAiOlWQIIB4aAi2sEALw_wcB

Pig Latin - The Pig Latin is a data flow language used by Apache Pig to analyze the data in Hadoop. It is a textual language that abstracts the programming from the Java MapReduce idiom into a notation

C# script language - roslyn

Návrh na změnu ferp data model	- k partner ExternalId/ nějakou poznámku - lepší asi nějaká tabulka
								- WorkReport by měl jít pravděpodobně poskládat z dostupných informací z ferp
								- EmployeesHoursWorked
								
JointJS vypadá nejlépe


https://hevodata.com/learn/data-mapping-tools/#opensourcetools
https://hackernoon.com/my-top-13-javascript-diagram-libraries-g2a53z6u


Bakalářka 	- srovnání nástrojů pro vizualizaci TODO: Můžu zůžit výběr na Open source?
				- Vybrán metabase
			- srovnání možností importu dat s důrazem na jednoduchost
				- ETL nástroje
				- vlastní mapper
				- vybráno vlastní jednoché řešení zaměřené na úzkou doménu
			- Datový medel
				- Příklady datových modelů zákazníků
				- generalizace
			- Vlastního mapperu
				- Knihovny pro mapování
				- Implementace
			- Kontrola dat - spíše implementace
			- Generické nástěnky
			- Deploy metabase v Kubernets
			
Bakalářská práce 
	- Srovnání nástrojů pro vizualizaci
		- Vybrán metabase
	- Srovnání možností importu dat s důrazem na jednoduchost
		- ETL nástroje
		- vlastní mapper
		- vybráno vlastní jednoché řešení zaměřené na úzkou doménu
	- Datový medel
		- Příklady datových modelů zákazníků
		- generalizace
	- Vlastního mapperu
		- Knihovny pro mapování
		- Implementace
	- Kontrola dat - spíše implementace
	- Generické nástěnky
	- Deploy metabase v Kubernets
			
Možné rozšíření o metabase buttons, nějaká funkcionalita pro lepší práci s daty.
			
Nový dashboard, který znázorňuje vývoj poptávky častých zákazníků.

Pokračovat v demu list a pokusit se upravit do použitelné podoby	
	- vygenerovat ze seznamu vlastností 
	- zjistit jak získat mapování konektorů.
	
Mapper -> průvodce postupně po nutných entitách zobrazí danou entitu vpravo v podobě tabulky s porty odpovídajícími vlastnostem entity.
			Pomocí tlačítka `Přidat zdroj` a následně propojit zdroje a připojit je k cílovým portům
			Před pokračováním k ozdrojování další entity je provedena kontrola úplnosti propojení
			Po nastavení všech entit je vygenerováno json mapování.

2 odstavce shrnutí

Bakalářka text
Analýza 1 řešení 3 str. 4-5 nejzákladnějších

a specifikace - 25-30

Napsat formální zadání cca 2 odtavce - motivační
4-5 reference - na technogie, metabase



podívat se na bakalářky v SIS zadání

¨1 odstavec motivační
2. odstavec cíl - skoro přes kopírák

4-5 zdrojů


vytvořit koncept specifikace
- části a jejich cíle
- pro porovnání

Technologie

Specifikace
- funkční nefunční požadavky
- Entity, procesy - UML

Jak naprogramovat - z letadla - nejzákladnější přehled - 2-3 str
Use cases

Deployment

Dokumetace - programátorská
			- deloyment dokumentace - nasazení
			- uživatelská dokumentace
			
Feedback od zákazníků - uživatelské testování

bibtex

V metabse problém s Employees celé jméno vs co poskytuje metabase

https://learn.microsoft.com/en-us/answers/questions/364258/how-should-i-get-a-list-of-table-names-and-field-n

https://learn.microsoft.com/cs-CZ/dotnet/api/system.data.datatablereader.getschematable?view=netcore-3.1

https://medium.com/@zaikinsr/roslyn-ef-core-runtime-dbcontext-constructing-285a9d67bc87


Get the database schema
	- https://www.c-sharpcorner.com/UploadFile/mahesh/getting-a-database-schema/
	- sql queries https://learn.microsoft.com/en-us/answers/questions/364258/how-should-i-get-a-list-of-table-names-and-field-n
	
postup: 
1. look at the Talend code - can be the spark used?
2. Further describe the objects for representing the etl process

Efektivita je třeba vyřešit jak nahrávat jen určité data z tabulek - dělat SELECT

Pro každou zdrojovou tabulku lze udělat IDataSource, který zabudovává daný select, ale co lazy enumerace atd.
	- potřeba nechávat jen určité data - možná nový ef core
	
Zadefinovat objekty ISourceEntity<RowType> - může dávat ef core struct? . podívat se na Ado.net
IProcessor<InputRowType, Outpt>...

Výše zmíněné objekty implementovat pomocí nějaké 

Bude potřeba dělat i ten config např. ExcludedResourceTypeIds

Stránkování ef core - https://stackoverflow.com/questions/54909758/entity-framework-core-2-2-compiled-query-struct-parameter-evaluating-locally#:~:text=I%20believe%20its,of%20the%20logic)

Otázky - Chceme vytvořit jen něco, co zprostředkuje jakoby to sql view, nebo přímo celý loader?
		- Co config? Bude potřeba dělat i ten config např. ExcludedResourceTypeIds?
		
Vygenerovat databázové view

An Integrated Materialized View based Approach in ETL with DSS to Achieve Fast Data Transformation and Better Query Optimization



Mimo - https://timelydataflow.github.io/differential-dataflow/
https://github.com/timelydataflow/differential-dataflow#differential-dataflow
https://www.iambobur.com/post/how-change-data-capture-cdc-works-with-streaming-database

Vytvořit graf objektů, z nich se vytvoří view

CDS on materialized views
https://www.google.com/search?q=materialized+view+cdc&oq=materialized+view+cdc&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIICAEQABgWGB4yCAgCEAAYFhge0gEJMTA0NjNqMGo3qAIAsAIA&sourceid=chrome&{google:instantExtendedEnabledParameter}ie=UTF-8
https://www.linkedin.com/pulse/hacking-materialized-view-logs-change-data-capture-part-art-trifonov/ 

Pro traverzi Jsonu
https://learn.microsoft.com/en-us/dotnet/api/system.text.json.nodes.jsonnode?view=net-7.0

Rozhodnout jak reprezentovat join condition - the or, and, ...

Storing a condition as a chain of conditions

interface converter - used and modified - https://github.com/vpekarek/InterfaceConverter.SystemTextJson/tree/master

preserve references https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/preserve-references?pivots=dotnet-7-0

JS library for generating JSON references, but only as a pointer - https://github.com/fastify/fast-json-stringify#ref

TODO:
- add source db model - we should use the model for both databases
	- create an example model
- add 'Add source table' button - that creates the source entity table 
- Add an join entity - joinLink 
	- join link has join entity and join modal
	- join entity has join modal which 
		- on joinLink double click `handleClick` method is called.
		- 
- finish the JoinModal
	- defining join condition 
- Change the namespaces and project names to start with Merica.Demos.HeliosBI
- add to documentation:
	- mapování probíhá po jednotlivých položkách targetMappings a po jednotlivých columnMappings mapovaných objektů. Dokud nejsou namapovány všechny sloupce mapované cílové entity, nelze pokračovat dál (TODO: nebo lze přeskočit/uložit a vrátit se k tomu později?)
- try the adding
- use manhatten router or sth for the join link
- are we using join link - add double click listerner.


- Check the column types
- consider using a library for the modals, they should be accessible - https://micromodal.vercel.app/
- Consider using angular for syncing the components - maybe its not needed
- Most probably the type names in the sql view generator will have to be updated
- Consider using for serialization and deserialization ids without refs and only on deserialization cache the objects by ids.
- Consider using wasm (the C# code) and typescript - https://blog.bitsrc.io/typescript-to-webassembly-the-what-the-how-and-the-why-3916a2561d37
	- probably not
- Consider moving sth to somewhere ...

debugging = https://intellij-support.jetbrains.com/hc/en-us/community/posts/4407736246802-Debugging-Typescript-Webpack-Project-Breakpoints-are-ignored-Help-Advise-needed

Potenciální problémy:
	- classConvertor neháže výjimky v případě missmatch, daná property je pouze undefined - možná nutnost použít classValidator
	- načítání v C# funguje jen pokud pole sourceEntities předchází poli v EntityMapping ostatním.
	- Při generování sql view mohou mít různé entity sloupce se stejnými jmény, které jsou mapovány na různé vlastnosti stejné entity v případě join - nutno přejmenovat
	
stored procedures in ETL - https://www.youtube.com/watch?v=LDMU7Oslf34


Pro Toma
- ukázat na čem pracuju, zeptat se na využití frameworků na vytvoření UI - Angular
- Přihlašování atd., máš zkušenosti?
- Vývojové prostředí, co používáš?
- Debugging
- WASM - web assembly
- Testing?

Odpovědi: použít React ve formě next js - prozkoumat C# + react
možnost psát přímo styled components 
a použít pro některé komponenty state


- Describe the algorithm in a better way
	- High level algorithm
		- On addition of a connection, propagate the message about newly of selected column
		- On removal of a connection , propagate the message about removal of a selected column
		- On Deserialization call CreateBackwardConnections

překopat lehce inicializaci, potřebujeme 
		- foreach target entity create targetEntityShape and for each of its source entities create sourceEntityShape
		- this will be called createGraphFromModel() or foreach entity mapping sth. as showEntityMapping(EntityMapping )

- done 	- add autolayout - https://www.jointjs.com/demos/directed-graph-layout
		- fix the labels of table shapes, they should display the table's name
		- refactor creating of property links
		- fix the diffrent color of property links created from previous model
		- create handle function for the adding and deleting of property links
			- create a common predecessor for the sourceEntityShapes
			- element remove removes also associated links
			- change the main source entity if it is deleted in mapping editor
				- we could use owner structure for this
					- new interface owner, that both sourceEntity and EntityMapping implements. It defines a way to keep the sourceEntity of entityMapping valid, propagate changes in ownership
		- create handle function for the adding
		- figure out how to remove mapping and add mapping in property link	
			- target entity is responsible for its mappings -> add entity mapping to the target entity shape
		- update check connection to recline connection between incopatible types
		- change the serialization, so it creates an array of elements ordered in a way that there are no forward references
			- Use the mapping convertor visitor, it has all the methods needed for the serialization
			- in source Column first serialize owner to ensure consistency of references	
			- Extend it with the sourceEntities array
			
		- add references to sourceColumns - all entities pointing at them	
			- what's the use case of that?
				- keeping the number of selected accuratly minimal
					- if the column was used e.g. for join condition, but the condition changes, we want to deselected
					- in the source table column selection, enable deselection of only unused column
		- initiate the sourceColumn reference holders when calling createBackwardConnections
			- problem with the join condition entity its does not implement the Owner interface
				- define Initiatable interface that requires createBackwardConnections() method
		- create a base modal 
			- with a save button and cancel button
			- consider defining it as a abstract class with helper methods
			- requires isReadyToSave method that indicates wherther the speciffic modal is in a valid sevable state
		- create a pick element generator
			- its called searchable dropdown
			- finish search functionality to the SearchableDropdown
		- joinModal and sourceTableModal should only define the content
				- prepare infrastructure - base modal
		- join modal
			- content for joinModal
				- store the dropdowns in JoinModal fields
				- store the temporary values in JoinModal fields
				- set default values - use the values from the join condition
					- if it is defined probably changing the joins field condition to nullable would be the right solution
					- use the placeholder field on the dropdown and set it to the default option and also set the corresponding temporery value holder to the default value
				- finish the correctness checking
					- SearchableDropdown finish show incorrect
				- the temporary picked options should be saved until the save action is not called
				- add cancel button 
			- add save callback
				- it will be used by the mapping editor when adding sourceentity to finish adding of the shapes
		- adding source table
			- add button for it
		- create a sourceTable picker modal
		- uses the searchable dropdown for letting the user pick the desired table
			- creates the entity and registrs it
				- initialization add all available columns to the selected columns
					- temporary solution - it would be better if join modal would be able to access all the available columns
			- fix overlay not displaying on modal switch 
		- add delete button to modal
		- add the top bar to the editor class
			- create a button for exporting mapping
			- button for adding sourceTables
		- Fill the shape description with something
			
now - source table column selection	-
			- add hadleDoubleClick method
			- create columnSelectionModal
		- where clause representation
		- default value blackbox
		- schema change back check
		
		- add are you sure you want to remove the joinlink pop up etc.
		- update tests
		- experiment with the types of lines
		- fix creation of new property mappings - somehow new SourceColumns are created repretedly for the same column
		- document the formats (database schema scrapes and mapping)- consider the visual way with plantUML or sth.
		- Check that the table that is being added is not already added
		- check if some events can be registered directly from the constructor - pointerdblclick is unfortunately not one of them

- consider adding -             // HACK: ensures that the owner source entity is already serialized
            // if (!this.plainSourceEntitiesByOriginal.has(sourceColumn.owner)) {
            //     sourceColumn.owner.accept(this);
            //     this.intermediateResult.pop();
            //     result = this.getSourceColumnRef(sourceColumn);
            // } 
            // else {
		to the mapping convertor
		
- Consider removing the sourceEntities property from the EntityMapping
- consider optional mapping of some target columns
- update the documentation
- pair the model with shapes
- mapping is managed by the target entity	
- go through mapping of different entities
- add logo of merica
- add port description to ports displaying whole name after mouse pointer left on the port for some time
- add concat functionality
	- if the combined names are under 128 chars, use it, otherwise create a new name (shortcut)
- ctrl Z functionality
- consider using the abstract get selected columns for the join entity, so the join when get selected columns makes array of the two joined entities
- consider removing the selected columns from the join entity - other entities than the sourceConcreteEntities
- consider using blazor for the management app and maybe also for the mapper file for all the communication with server
	- how to use blazor https://www.youtube.com/watch?v=walv3nLTJ5g
	-> blazor makes it pretty simple
	- Cooperation of blazor and Typescript - https://www.youtube.com/watch?v=I_zFlBKgl5s
		- We might need to use WebPack instead of the MsBuild package for typescript
- consider using bootstrap for styling the html components - there is also modal example etc.
	- https://www.youtube.com/watch?v=eow125xV5-c


the mapping editor either receives entity mapping which is supposed to be edited or it receives table entity representing a tablefrom the target database and the mapping editor creates empty mapping entity 

Inicializace:
- Frontend receives mapping from the server and also the current scrape of the source and target database schema
- If the mapping is not new, it will be checked for any deviations from the new schemas, newly invalid connections will be displayed to the user and later removed to ensure, that the mapping must be fixed befero approving it.
- User picks terget entity, whose mapping he wants to edit.
- mapping editor is called to display the entity's mapping, it creates entity shapes, and join and property links.
- when the user is adding new source table or duble clicks on the SourceEntityShape header an column/attribute selection modal pops up

Changes in the model:
- in join outputColumns -> selectedColumns
- columnMapping in to sourceColumn


For defining join condition
- user must add the columns that are needed for the 

- Architektura - použité technologie: 
	- propojení backend a frontend: 
		- https://stackoverflow.com/questions/46537108/mvc-for-a-single-page - this could be interesting for integrating the mapper with other parts, the mapper would be a javascript servise for an asp.net app, this service would get a service for communicating with the server.	
			- https://learn.microsoft.com/en-us/aspnet/core/client-side/spa-services?view=aspnetcore-3.0
	- login idnetity on ASP.NET core:
		- https://learn.microsoft.com/en-us/aspnet/core/security/authentication/identity?view=aspnetcore-8.0&tabs=visual-studio
		https://www.youtube.com/watch?v=wzaoQiS_9dI
	- how to route users to the right metabase instance 
		- deploy automatically new instances of metabase:
			- use kubernetes - it has api which can be called from c#, so we can configure everything needed and deploy the image of metabase as a docker image
				- find a right C# K8s client to enable the metabase deployment
					- how to connect to the cluster?
						- Is there a universal API or we need something more?
							- yes, there is also official K8s client for C#
								- test whether new instance can be easily deployed - use docker desktop K8s
						- look through the bechelars theses from Matfyz to find something with kubernetes
					- https://learn.microsoft.com/en-us/training/modules/dotnet-deploy-microservices-kubernetes/
					