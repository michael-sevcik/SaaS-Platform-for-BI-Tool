@using static Microsoft.AspNetCore.Components.Web.RenderMode;
@rendermode @(new InteractiveServerRenderMode(false))

@* TODO: INJECT CostumerDbModelManager, get the db Model and pass it to the mapper. Also we need to call create model somewhere*@

@using BIManagement.Common.Components.InteractiveAlerts
@using BIManagement.Modules.DataIntegration.Domain.DbModelling
@using Microsoft.JSInterop;

<SuccessAlert Message="@Message" @ref="successAlert" />

<ErrorAlert Message="@Message" @ref="errorAlert" />

<div class="embed-responsive">
    <div class="my-component">
        <div id="mapper">
            <link rel="stylesheet" type="text/css" href="_content/BIManagement.Modules.DataIntegration.MapperComponent/dist/style.css" />
            <div id="content">
                <div id="toolbar">
                    <input id="source-file" type="file" />
                    <Microsoft.AspNetCore.Components.Forms.InputSelect @bind-Value=@testint @bind-Value:after="HandleTargetTableSelectionChange">
                        @* <option value="1">1</option> *@
                        @if (targetTables != null)
                        {
                            for (int i = 0; i < targetTables.Count; ++i)
                            {
                                var table = targetTables[i];
                                <option value="@i">@table.Schema.@table.TableName</option>
                            }
                        }
                    </Microsoft.AspNetCore.Components.Forms.InputSelect>
                    <button @onclick=SaveMappingAsync id="save-button">Save</button>
                </div>
                <div id="paper"></div>
            </div>
            <div id="overlay"></div>
        </div>
    </div>
</div>

@* todo: remove *@
<button @onclick="() => OnAfterRenderAsync(false)">retry</button>
